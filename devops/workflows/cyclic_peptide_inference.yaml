apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: cyclic-peptide-inference-
spec:
  arguments:
    parameters:
    - name: extra-args
    - name: jobname
    - name: output-gcs-path
  entrypoint: cyclic-peptide-inference
  volumes:
  - name: alphafold-data
    persistentVolumeClaim:
      claimName: alphafold-data-pvc
      readOnly: true

  templates:
    - name: cyclic-peptide-inference
      inputs:
        artifacts:
          - name: sequence
            path: /sequence.fasta
            gcs:
              bucket: alphafold-inference
              key: "{{workflow.parameters.output-gcs-path}}/sequence.fasta"
        parameters:
          - name: extra-args
          - name: jobname
      outputs:
        artifacts:
          - name: results
            path: /results
            gcs:
              bucket: alphafold-inference
              key: "{{workflow.parameters.output-gcs-path}}/results.tgz"
      script:
        image: nvidia/cuda:11.1.1-devel-ubuntu20.04
        command: [bash]
        source: |
          mkdir -p /raw_results
          colabfold_batch \
            /sequence.fasta \
            /raw_results \
            {{inputs.parameters.extra-args}}

          mkdir -p /results
          $SCHRODINGER/run close_cycles.py /raw_results /results
          
        resources:
          requests:
            memory: 60Gi
            cpu: 7000m
          limits:
            nvidia.com/gpu: 1
        volumeMounts:
        - name: alphafold-data
          mountPath: /mnt
          readOnly: true