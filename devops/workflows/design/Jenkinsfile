#!/usr/bin/env groovy 

pipeline {
    agent none
    parameters {
        choice(
            name: 'protocol', 
            choices: ['fixbb', 'binder', 'hallucination'], 
            description: '')
        string(name: 'jobname', defaultValue: 'colabdesign', description: 'Name of the job')
        string(name: 'num_seqs', defaultValue: '1', description: 'How many sequences to design per input')
        stashedFile 'structures.maegz'
        stashedFile 'design_parameters.csv'
    }
    stages {
        stage('Run colabdesign') {
            agent {
                label "gpu-cloud"
            }
            environment {
                SCHRODINGER = "/mnt/squashsuites/suite2023-3-build081"
            }
            steps {
                unstash 'structures.maegz'
                unstash 'design_parameters.csv'
                // source devops/workflows/design/activate_gcp.sh
                sh '''
                    ls
                    mkdir -p raw_results
                    source devops/workflows/design/install_colabdesign.sh
                    source devops/workflows/design/run_cyclic_colabdesign.sh $params.protocol $params.num_seqs
                    tar -czf raw_results.tgz raw_results
                    '''
                archiveArtifacts artifacts: 'raw_results.tgz', fingerprint: true
            }
        }
        stage('Close cycles') {
            agent {
                label "cpu-cloud"
            }
            environment {
                SCHRODINGER = "/mnt/squashsuites/suite2023-3-build081"
            }
            steps {
                copyArtifacts filter: 'raw_results.tgz', fingerprintArtifacts: true, projectName: 'colabdesign', selector: lastSuccessful()
                sh 'tar -xzf raw_results.tgz'
                sh 'mkdir -p results'
                sh 'source devops/workflows/design/close_cycles.sh'
                sh 'tar -czf results.tgz results'
                archiveArtifacts artifacts: 'results.tgz', fingerprint: true
            }
 
        }
    }
}
