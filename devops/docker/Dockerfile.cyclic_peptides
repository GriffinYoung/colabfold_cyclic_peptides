FROM nvidia/cuda:11.1.1-devel-ubuntu20.04

# COPY ./sources.list /etc/apt/sources.list

#RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A4B469963BF863CC \
#&& apt update \
#&& apt -y install gcc curl git wget gnutls-bin \
#&& git config --global http.sslVerify false \
#&& git config --global http.postBuffer 1048576000 \
#&& bash /install_colabbatch_linux.sh

# Update the package repository and install necessary packages
RUN apt-get update && \
    apt-get -y install curl wget

# Download and run the installation script
RUN wget https://raw.githubusercontent.com/YoshitakaMo/localcolabfold/main/install_colabbatch_linux.sh && \
    bash install_colabbatch_linux.sh

ENV COLABFOLDDIR="localcolabfold"
ENV PATH="${COLABFOLDDIR}/colabfold-conda/bin:$PATH"
#RUN echo "source activate /colabfold_batch/colabfold-conda" > ~/.bashrc

# Set environment variables
ENV SITEPACKAGES="${COLABFOLDDIR}/colabfold-conda/lib/python3.10/site-packages/"
#ENV PYTHONPATH="${SITEPACKAGES}:${PYTHONPATH}"

# Apply sed commands
RUN printf "\ndef add_cyclic_offset(offset, L):\n  max_dist = (L // 2)\n  idxs = jnp.arange(offset.shape[0])\n  i = idxs[:,None]\n  j = idxs[None,:]\n  set_indices = (i < L) & (j < L)\n  dists = abs(j - i)\n  dists = jnp.where((dists > max_dist), L - dists, dists)\n  upper_right = (i < j)\n  offset = jnp.where(set_indices & upper_right, -dists, offset)\n  offset = jnp.where(set_indices & ~upper_right, dists, offset)\n  return offset" >> $SITEPACKAGES/alphafold/model/utils.py && \
    sed -i "s/offset = pos\[:, None\] - pos\[None, :\]/offset = pos[:, None] - pos[None, :]\n    binder_len=jnp.sum(asym_id == 0)\n    offset = utils.add_cyclic_offset(offset,binder_len)\n/g" $SITEPACKAGES/alphafold/model/modules_multimer.py && \
    sed -i "s/offset = pos\[:,None\] - pos\[None,:\]/offset = pos[:,None] - pos[None,:]\n\toffset = utils.add_cyclic_offset(offset,len(pos))\n/g" $SITEPACKAGES/alphafold/model/modules.py && \

CMD /bin/bash
